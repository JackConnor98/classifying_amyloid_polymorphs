from bs4 import BeautifulSoup
import requests 
import os

output_dir = os.path.join("Output", "Validation")
save_path = os.path.join("Output", "Validation", "data")

# Making output directories
# Check if the directory already exists
if not os.path.exists(output_dir):
    os.mkdir(output_dir)
if not os.path.exists(save_path):
    os.mkdir(save_path)

url = "https://www.rcsb.org/experimental/"

# list of pdbs to import taken from pdb_names generated by "get_pdb_names.R"
with open("Output/pdb_names.txt", "r") as file:
    # Skip the first line which contains the column name
    next(file)
    # Initialize an empty list to store the names
    pdb = []
    # Iterate over the lines in the file
    for line in file:
        # Strip any leading/trailing whitespaces and append the name to the list
        pdb.append(line.strip())


for i in pdb:
    # adding pdb to the URL search
    pdb_query = url + i

    # Reading in PDB HTML page
    response = requests.get(pdb_query)
    doc = BeautifulSoup(response.text, "html.parser")

    try:
        # Finding the validation data link by text
        validation_link = doc.find("a", text="Validation (XML - gz)")
        
        if validation_link:
            validation_url = validation_link.get('href')
            if validation_url.startswith("//"):
                validation_url = "https:" + validation_url
            print("Validation link found:", validation_url)

            # Download the file
            file_response = requests.get(validation_url)
            file_name = os.path.join(save_path, validation_url.split("/")[-1])

            with open(file_name, 'wb') as file:
                file.write(file_response.content)
        
        else:
            print("Validation link not found")

    except AttributeError:
        print("Error finding validation link")

